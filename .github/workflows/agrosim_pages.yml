name: AgroSim Pages — One-file Bootstrap

on:
  push:
    paths:
      - '.github/workflows/agrosim_pages.yml'
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Generate static site
        run: |
          set -e
          mkdir -p site

          # -------- index.html --------
          cat > site/index.html <<'EOF'
          <!doctype html>
          <html lang="fr">
          <head>
            <meta charset="utf-8">
            <meta name="viewport" content="width=device-width,initial-scale=1">
            <link rel="manifest" href="./manifest.webmanifest">
            <title>AgroSim — Demo</title>
            <style>
              html,body{margin:0;padding:0;font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif;background:#0b0b0b;color:#f5f5f5}
              .wrap{max-width:680px;margin:0 auto;padding:24px}
              h1{font-size:28px;margin:0 0 8px}
              .card{background:#141414;border:1px solid #2a2a2a;border-radius:12px;padding:16px;margin:16px 0}
              label{display:block;font-size:14px;margin:6px 0}
              input{width:100%;padding:10px;border-radius:8px;border:1px solid #333;background:#0f0f0f;color:#fff}
              button{padding:10px 14px;border-radius:8px;border:1px solid #333;background:#1f6feb;color:#fff;font-weight:600}
              button:active{transform:translateY(1px)}
              pre{white-space:pre-wrap;background:#0f0f0f;border:1px solid #2a2a2a;border-radius:8px;padding:12px;max-height:300px;overflow:auto}
              .muted{color:#b9b9b9;font-size:12px}
              .row{display:flex;gap:8px;align-items:center}
              .row > *{flex:1}
              .badge{display:inline-block;padding:2px 8px;border-radius:999px;background:#222;border:1px solid #333;font-size:12px}
            </style>
          </head>
          <body>
            <div class="wrap">
              <h1>AgroSim <span class="badge">GitHub Pages</span></h1>
              <p class="muted">Site statique déployé automatiquement via un seul workflow.</p>

              <div class="card">
                <h3>Réglages API</h3>
                <label>URL de l’API (Railway) :</label>
                <div class="row">
                  <input id="apiBase" placeholder="https://ton-api.railway.app">
                  <button id="save">Enregistrer</button>
                </div>
                <p class="muted">Astuce : colle l’URL exacte de ton backend. Sauvegardée en local sur ton appareil.</p>
              </div>

              <div class="card">
                <h3>Test de connexion</h3>
                <div class="row">
                  <button id="ping">Ping /health</button>
                  <button id="lots">GET /storage/lots?farm_id=1</button>
                </div>
                <pre id="out">Clique sur un bouton pour tester…</pre>
              </div>

              <div class="card">
                <h3>Installer sur l’écran d’accueil</h3>
                <p class="muted">Ce site est une PWA : ajoute-le à l’écran d’accueil pour l’ouvrir comme une appli (iOS : partager → « Sur l’écran d’accueil »).</p>
              </div>

              <p class="muted">© AgroSim – Demo Pages</p>
            </div>

            <script type="module" src="./main.js"></script>
            <script>
              if ('serviceWorker' in navigator) { navigator.serviceWorker.register('./sw.js'); }
            </script>
          </body>
          </html>
          EOF

          # -------- main.js --------
          cat > site/main.js <<'EOF'
          const $ = (q)=>document.querySelector(q);
          const KEY = 'agrosim_api_base';
          const input = $('#apiBase'); const out = $('#out');

          function getBase(){
            return localStorage.getItem(KEY) || '';
          }
          function setBase(v){
            localStorage.setItem(KEY, v.trim());
          }
          function show(msg, obj){
            out.textContent = msg + (obj ? '\n' + JSON.stringify(obj,null,2) : '');
          }

          input.value = getBase();

          $('#save').onclick = ()=>{
            setBase(input.value);
            show('✅ Enregistré', { apiBase:getBase() });
          };

          $('#ping').onclick = async ()=>{
            const base = getBase();
            if(!base){ show('⚠️ Renseigne d’abord l’URL API'); return; }
            try{
              const r = await fetch(base.replace(/\/$/,'') + '/health');
              show('GET /health', await r.json());
            }catch(e){ show('❌ Erreur', {error: String(e)}); }
          };

          $('#lots').onclick = async ()=>{
            const base = getBase();
            if(!base){ show('⚠️ Renseigne d’abord l’URL API'); return; }
            try{
              const r = await fetch(base.replace(/\/$/,'') + '/storage/lots?farm_id=1');
              show('GET /storage/lots?farm_id=1', await r.json());
            }catch(e){ show('❌ Erreur', {error: String(e)}); }
          };
          EOF

          # -------- manifest --------
          cat > site/manifest.webmanifest <<'EOF'
          {
            "name": "AgroSim",
            "short_name": "AgroSim",
            "start_url": "./",
            "display": "standalone",
            "background_color": "#0b0b0b",
            "theme_color": "#0b0b0b",
            "icons": []
          }
          EOF

          # -------- service worker (cache simple) --------
          cat > site/sw.js <<'EOF'
          const CACHE = 'agrosim-pages-v1';
          const ASSETS = ['./','./index.html','./main.js','./manifest.webmanifest'];
          self.addEventListener('install',e=>{ e.waitUntil(caches.open(CACHE).then(c=>c.addAll(ASSETS))); });
          self.addEventListener('fetch',e=>{ e.respondWith(caches.match(e.request).then(r=>r||fetch(e.request))); });
          EOF

      - name: Configure Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
